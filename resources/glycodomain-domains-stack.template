{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "glycodomainDomains" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.produceDataset = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "produceDataset",
        "Handler" : "index.produceDataset",
        "Role" : {"Fn::GetAtt" : ["LambdaGlycodomainDomainsRole", "Arn"] },
        "Runtime" : "nodejs",
        "MemorySize" : 256,
        "Timeout" : 300
      },
      "DependsOn" : "LambdaGlycodomainDomainsRole"
    },
    "LambdaGlycodomainDomainsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ { "Ref" : "ReadRawDomains" },{ "Ref" : "WriteGlycodomainDomains" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "GlycodomainDomainsPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::GetAtt": [ "glycodomainDomains", "Arn" ]},
            "Principal": "s3.amazonaws.com",
            "SourceAccount": {"Ref" : "AWS::AccountId" },
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:s3:::"
                     , "node-lambda"]]
            }
        },
        "DependsOn" : "glycodomainDomains"
    },
    "GlycodomainDomainsLogWriterPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "GatordataLogWriterPolicy",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              }
            ]
        },
        "Roles" : [ { "Ref" : "LambdaGlycodomainDomainsRole" } ]
      },
      "DependsOn" : ["LambdaGlycodomainDomainsRole"]
    },
    "ReadRawDomains": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Read raw domain data",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", "node-lambda", "glycodomain/*" ] ] },
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", "node-lambda", "interpro/*" ] ] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", "node-lambda" ] ] }
              ],
              "Condition": {"StringLike":{"s3:prefix":["interpro/InterPro*"]}}
            }
          ]
        }
      }
    },
    "WriteGlycodomainDomains": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Write glycodomain domains json file",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/uploads/glycodomain/public" ] ] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator" ] ] }
              ],
              "Condition": {"StringLike":{"s3:prefix":["uploads/glycodomain/public"]}}
            }
          ]
        }
      }
    }
  },
  "Outputs": {
  }
}